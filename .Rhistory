library(RDRToolbox)
img = readImage("spiral.jpg")
image(img[,,1], useRaster = TRUE, col = grey(seq(0, 1, length = 256)), main="Original Picture")
points = trans.picture(1-img[,,1])
xy = points$xys[order(points$Q,decreasing=TRUE),][1:1500,]
data.frame(x=xy[,1], y=xy[,2]) %>% ggplot(aes(x,y)) +
geom_point() + xlim(c(0,1)) + ylim(c(0,1))
score = Isomap(xy, 1, 5)
hist(score$dim1)
data.frame(x=xy[,1],y=xy[,2],s=c(score$dim1)) %>%
ggplot(aes(x,y,color=s)) +
geom_point() +
scale_color_gradientn(colours = rainbow(5)) +
ggtitle("Isomap")
xyo = xy[order(score$dim1),]
data.frame(x=xyo[,1],y=xyo[,2]) %>%
ggplot(aes(x,y)) +
geom_line() +
ggtitle("Isomap Curve")
spx = smooth.spline(xyo[,1])
spy = smooth.spline(xyo[,2])
plot(spx$y, spy$y,
xlab = "x", ylab = "y",
main = "IsoSpline")
res2 = principal_curve(xyo, start = cbind(spx$y, spy$y))
plot(res2)
library(OpenImageR)
library(RDRToolbox)
img = readImage("spiral.jpg")
image(img[,,1], useRaster = TRUE, col = grey(seq(0, 1, length = 256)), main="Original Picture")
points = trans.picture(1-img[,,1])
xy = points$xys[order(points$Q,decreasing=TRUE),][1:1500,]
data.frame(x=xy[,1], y=xy[,2]) %>% ggplot(aes(x,y)) +
geom_point() + xlim(c(0,1)) + ylim(c(0,1))
score = Isomap(xy, 1, 5)
hist(score$dim1)
data.frame(x=xy[,1],y=xy[,2],s=c(score$dim1)) %>%
ggplot(aes(x,y,color=s)) +
geom_point() +
scale_color_gradientn(colours = rainbow(5)) +
ggtitle("Isomap")
xyo = xy[order(score$dim1),]
spx = smooth.spline(xyo[,1])
spy = smooth.spline(xyo[,2])
plot(spx$y, spy$y,
xlab = "x", ylab = "y",
main = "IsoSpline")
res2 = principal_curve(xyo, start = cbind(spx$y, spy$y))
plot(res2)
plot(spx$y, spy$y, type = "l",
xlab = "x", ylab = "y",
main = "IsoSpline")
library(OpenImageR)
library(RDRToolbox)
img = readImage("spiral.jpg")
image(img[,,1], useRaster = TRUE, col = grey(seq(0, 1, length = 256)), main="Original Picture")
points = trans.picture(1-img[,,1])
xy = points$xys[order(points$Q,decreasing=TRUE),][1:1500,]
data.frame(x=xy[,1], y=xy[,2]) %>% ggplot(aes(x,y)) +
geom_point() + xlim(c(0,1)) + ylim(c(0,1))
score = Isomap(xy, 1, 5)
hist(score$dim1)
data.frame(x=xy[,1],y=xy[,2],s=c(score$dim1)) %>%
ggplot(aes(x,y,color=s)) +
geom_point() +
scale_color_gradientn(colours = rainbow(5)) +
ggtitle("Isomap")
xyo = xy[order(score$dim1),]
spx = smooth.spline(xyo[,1])
spy = smooth.spline(xyo[,2])
plot(spx$y, spy$y, type = "l",
xlab = "x", ylab = "y",
main = "IsoSpline")
res2 = principal_curve(xyo, start = cbind(spx$y, spy$y))
plot(res2)
img = readImage("overlap.jpg")
image(img[,,1], useRaster = TRUE, col = grey(seq(0, 1, length = 256)), main="Original Picture")
points = trans.picture(1-img[,,1])
xy = points$xys[order(points$Q,decreasing=TRUE),][1:500,]
data.frame(x=xy[,1], y=xy[,2]) %>% ggplot(aes(x,y)) +
geom_point() + xlim(c(0,1)) + ylim(c(0,1))
img = readImage("overlap.jpg")
image(img[,,1], useRaster = TRUE, col = grey(seq(0, 1, length = 256)), main="Original Picture")
points = trans.picture(1-img[,,1])
xy = points$xys[order(points$Q,decreasing=TRUE),][1:800,]
data.frame(x=xy[,1], y=xy[,2]) %>% ggplot(aes(x,y)) +
geom_point() + xlim(c(0,1)) + ylim(c(0,1))
img = readImage("overlap.jpg")
image(img[,,1], useRaster = TRUE, col = grey(seq(0, 1, length = 256)), main="Original Picture")
points = trans.picture(1-img[,,1])
xy = points$xys[order(points$Q,decreasing=TRUE),][1:800,]
data.frame(x=xy[,1], y=xy[,2]) %>% ggplot(aes(x,y)) +
geom_point() + xlim(c(0,1)) + ylim(c(0,1))
score = Isomap(xy, 1, 5)
hist(score$dim1)
data.frame(x=xy[,1],y=xy[,2],s=c(score$dim1)) %>%
ggplot(aes(x,y,color=s)) +
geom_point() +
scale_color_gradientn(colours = rainbow(5)) +
ggtitle("Isomap")
xyo = xy[order(score$dim1),]
spx = smooth.spline(xyo[,1])
spy = smooth.spline(xyo[,2])
plot(spx$y, spy$y, type = "l",
xlab = "x", ylab = "y",
main = "IsoSpline")
res2 = principal_curve(xyo, start = cbind(spx$y, spy$y))
plot(res2)
plot(spx$y)
plot(spy$y)
plot(xy[(score$dim1 > -0.6)&(score$dim1 < -0.1)])
plot(xy[(score$dim1 > -0.6)&(score$dim1 < -0.1),])
plot(xy[(score$dim1 > -0.6)&(score$dim1 < -0.2),])
range.plot <- function(xy, score, smin, smax){
ind = (score >= smin) & (score < smax)
plot(xy[ind,])
}
range.plot(xy, score$dim1,-1,0.2)
range.plot(xy, score$dim1,-1,-0.2)
range.plot(xy, score$dim1,-0.2,-0.2)
range.plot(xy, score$dim1,-0.2,0.2)
range.plot(xy, score$dim1,0.2,0.3)
range.plot <- function(xy, score, smin, smax){
ind = (score >= smin) & (score < smax)
plot(xy[ind,], xlim = c(0,1), ylim = c(0,1))
}
range.plot(xy, score$dim1,0.2,0.3)
range.plot(xy, score$dim1,0.3,1)
range.plot(xy, score$dim1,-1,0.2)
range.plot(xy, score$dim1,-1,-0.2)
range.plot(xy, score$dim1,-0.2,0.2)
range.plot(xy, score$dim1,0.2,0.3)
range.plot(xy, score$dim1,-0.2,0.8)
density(score$dim1)
de = density(score$dim1)
plot(de)
de$y
plot(de$y)
plot(de)
range.plot(xy, score$dim1,-1,0)
range.plot(xy, score$dim1,0,0.5)
range.plot(xy, score$dim1,0.5,1)
range.plot(xy, score$dim1,-1,0)
?density
de2 = MASS::kde2d(xy)
? kde2d
de2 = MASS::kde2d(xy[,1],xy[,2])
plot(de2)
plot(de2$z)
plot(de2$y)
de2$z
dim(de2$z)
image(de2$z, useRaster = TRUE, col = grey(seq(0, 1, length = 256)), main="Original Picture")
de2$x
de2 = MASS::kde2d(xy[,1],xy[,2], n = 100)
image(de2$z, useRaster = TRUE, col = grey(seq(0, 1, length = 256)), main="Original Picture")
install.packages("kernlab")
sc = specc(xy, centers=3)
library(kernlab)
sc = specc(xy, centers=3)
plot(xy[,1],xy[,2],col=sc)
sc = specc(xy, centers=5)
plot(xy[,1],xy[,2],col=sc)
sc = specc(xy, centers=4)
plot(xy[,1],xy[,2],col=sc)
sc = specc(xy, centers=3)
plot(xy[,1],xy[,2],col=sc)
sc = specc(xy, centers=10)
plot(xy[,1],xy[,2],col=sc)
sc = specc(xy, centers=10)
data.frame(x=xy[,1],y=xy[,2],s=sc) %>%
ggplot(aes(x,y,color=s)) +
geom_point() +
scale_color_gradientn(colours = rainbow(5)) +
ggtitle("Spectral Clustering")
sc = specc(xy, centers=10)
data.frame(x=xy[,1],y=xy[,2],s=sc) %>%
ggplot(aes(x,y,color=s)) +
geom_point() +
ggtitle("Spectral Clustering")
sc = specc(xy, centers=9)
data.frame(x=xy[,1],y=xy[,2],s=sc) %>%
ggplot(aes(x,y,color=s)) +
geom_point() +
ggtitle("Spectral Clustering")
class(sc)
sc = specc(xy, centers=10)
data.frame(x=xy[,1],y=xy[,2],s=as.numeric(sc)) %>%
ggplot(aes(x,y,color=s)) +
geom_point() +
ggtitle("Spectral Clustering")
sc = specc(xy, centers=10)
data.frame(x=xy[,1],y=xy[,2],s=as.factor(sc)) %>%
ggplot(aes(x,y,color=s)) +
geom_point() +
ggtitle("Spectral Clustering")
img = readImage("colon.jpg")
image(img[,,1], useRaster = TRUE, col = grey(seq(0, 1, length = 256)), main="Original Picture")
points = trans.picture(1-img[,,1])
xy = points$xys[order(points$Q,decreasing=TRUE),][1:1500,]
data.frame(x=xy[,1], y=xy[,2]) %>% ggplot(aes(x,y)) +
geom_point() + xlim(c(0,1)) + ylim(c(0,1))
img = readImage("colon.jpg")
image(img[,,1], useRaster = TRUE, col = grey(seq(0, 1, length = 256)), main="Original Picture")
points = trans.picture(1-img[,,1])
xy = points$xys[order(points$Q,decreasing=TRUE),][1:2000,]
data.frame(x=xy[,1], y=xy[,2]) %>% ggplot(aes(x,y)) +
geom_point() + xlim(c(0,1)) + ylim(c(0,1))
img = readImage("colon.jpg")
image(img[,,1], useRaster = TRUE, col = grey(seq(0, 1, length = 256)), main="Original Picture")
points = trans.picture(1-img[,,1])
xy = points$xys[order(points$Q,decreasing=TRUE),][1:2500,]
data.frame(x=xy[,1], y=xy[,2]) %>% ggplot(aes(x,y)) +
geom_point() + xlim(c(0,1)) + ylim(c(0,1))
img = readImage("colon.jpg")
image(img[,,1], useRaster = TRUE, col = grey(seq(0, 1, length = 256)), main="Original Picture")
points = trans.picture(1-img[,,1])
xy = points$xys[order(points$Q,decreasing=TRUE),][1:2500,]
data.frame(x=xy[,1], y=xy[,2]) %>% ggplot(aes(x,y)) +
geom_point() + xlim(c(0,1)) + ylim(c(0,1))
score = Isomap(xy, 1, 5)
hist(score$dim1)
data.frame(x=xy[,1],y=xy[,2],s=c(score$dim1)) %>%
ggplot(aes(x,y,color=s)) +
geom_point() +
scale_color_gradientn(colours = rainbow(5)) +
ggtitle("Isomap")
xyo = xy[order(score$dim1),]
spx = smooth.spline(xyo[,1])
spy = smooth.spline(xyo[,2])
plot(spx$y, spy$y, type = "l",
xlab = "x", ylab = "y",
main = "IsoSpline")
res2 = principal_curve(xyo, start = cbind(spx$y, spy$y))
plot(res2)
data.frame(x=xy[,1], y=xy[,2]) %>% ggplot(aes(x,y)) +
geom_point() + xlim(c(0,1)) + ylim(c(0,1))
data.frame(x=xy[,1], y=xy[,2]) %>% ggplot(aes(x,y)) +
geom_point(alpha=0.3) + xlim(c(0,1)) + ylim(c(0,1))
data.frame(x=xy[,1], y=xy[,2]) %>% ggplot(aes(x,y)) +
geom_point(alpha=0.2) + xlim(c(0,1)) + ylim(c(0,1))
data.frame(x=xy[,1], y=xy[,2]) %>% ggplot(aes(x,y)) +
geom_point(alpha=0.1) + xlim(c(0,1)) + ylim(c(0,1))
data.frame(x=xy[,1], y=xy[,2]) %>% ggplot(aes(x,y)) +
geom_point(alpha=0.1) +
geom_line(data=data.frame(x=spx$y,y=spy$y))
xlim(c(0,1)) + ylim(c(0,1))
data.frame(x=xy[,1], y=xy[,2]) %>% ggplot(aes(x,y)) +
geom_point(alpha=0.1) +
geom_line(data=data.frame(x=spx$y,y=spy$y)) +
xlim(c(0,1)) + ylim(c(0,1))
data.frame(x=xy[,1], y=xy[,2]) %>% ggplot(aes(x,y)) +
geom_point(alpha=0.1) +
geom_line(data=data.frame(x=spx$y,y=spy$y),x=x,y=y) +
xlim(c(0,1)) + ylim(c(0,1))
data=data.frame(x=spx$y,y=spy$y) %>% ggplot(aes(x,y)) + geom_line()
data.frame(x=spx$y,y=spy$y) %>% ggplot(aes(x,y)) + geom_line()
plot(spx$y,spy$y)
plot(spx$y,spy$y, type="l")
data.frame(x=spx$y,y=spy$y) %>% ggplot(aes(x,y)) + geom_line()
plot(spx$y[1:100],spy$y[1:100], type="l")
plot(spx$y[1:300],spy$y[1:300], type="l")
plot(spx$y[1:800],spy$y[1:800], type="l")
plot(spx$y[1:1500],spy$y[1:1500], type="l")
plot(spx$y[1:2000],spy$y[1:2000], type="l")
plot(spx$y[1:2300],spy$y[1:2300], type="l")
plot(spx$y,spy$y, type="l")
plot(spx$y,spy$y, type="l")
data.frame(x=spx$y,y=spy$y) %>% ggplot(aes(x,y)) + geom_line()
data.frame(x=spx$y,y=spy$y) %>% ggplot(aes(x,y)) + geom_point()
data.frame(x=spx$y,y=spy$y) %>% ggplot(aes(x,y)) + geom_point(size=1)
data.frame(x=spx$y,y=spy$y) %>% ggplot(aes(x,y)) + geom_point(size=0.1)
data.frame(x=xy[,1], y=xy[,2]) %>% ggplot(aes(x,y)) +
geom_point(alpha=0.1) +
geom_point(data=data.frame(x=spx$y,y=spy$y), size=0.2) +
xlim(c(0,1)) + ylim(c(0,1))
library(kernlab)
img = readImage("overlap.jpg")
image(img[,,1], useRaster = TRUE, col = grey(seq(0, 1, length = 256)), main="Original Picture")
points = trans.picture(1-img[,,1])
xy = points$xys[order(points$Q,decreasing=TRUE),][1:800,]
data.frame(x=xy[,1], y=xy[,2]) %>% ggplot(aes(x,y)) +
geom_point() + xlim(c(0,1)) + ylim(c(0,1))
score = Isomap(xy, 1, 5)
hist(score$dim1)
data.frame(x=xy[,1],y=xy[,2],s=c(score$dim1)) %>%
ggplot(aes(x,y,color=s)) +
geom_point() +
scale_color_gradientn(colours = rainbow(5)) +
ggtitle("Isomap")
xyo = xy[order(score$dim1),]
spx = smooth.spline(xyo[,1])
spy = smooth.spline(xyo[,2])
plot(spx$y, spy$y, type = "l",
xlab = "x", ylab = "y",
main = "IsoSpline")
res2 = principal_curve(xyo, start = cbind(spx$y, spy$y))
plot(res2)
sc = specc(xy, centers=10)
data.frame(x=xy[,1],y=xy[,2],s=as.factor(sc)) %>%
ggplot(aes(x,y,color=s)) +
geom_point() +
ggtitle("Spectral Clustering")
sc = specc(xy, centers=5)
data.frame(x=xy[,1],y=xy[,2],s=as.factor(sc)) %>%
ggplot(aes(x,y,color=s)) +
geom_point() +
ggtitle("Spectral Clustering")
sc = specc(xy, centers=4)
data.frame(x=xy[,1],y=xy[,2],s=as.factor(sc)) %>%
ggplot(aes(x,y,color=s)) +
geom_point() +
ggtitle("Spectral Clustering")
principal_curve(xy[sc==1,])
res = principal_curve(xy[sc==1,])
res$s
dim(res$s)
sum(rbind(c(), res$s) - res$s)
K = 4
sc = specc(xy, centers=K)
data.frame(x=xy[,1],y=xy[,2],s=as.factor(sc)) %>%
ggplot(aes(x,y,color=s)) +
geom_point() +
ggtitle("Spectral Clustering")
res = c()
for(i in 1:K){
pc = principal_curve(xy[sc==i,])
res = rbind(res, pc$s)
}
plot(res)
plot(principal_curve(xy[sc==1,]))
plot(xy[sc==1,])
plot(principal_curve(xy[sc==1,]))
plot(principal_curve(xy[sc==2,]))
plot(principal_curve(xy[sc==3,]))
plot(principal_curve(xy[sc==4,]))
iso.princurve <- function(xy){
score = Isomap(xy, 1, 5)
xyo = xy[order(score$dim1),]
spx = smooth.spline(xyo[,1])
spy = smooth.spline(xyo[,2])
cbind(spx$y, spy$y)
}
iso_spline <- function(xy){
score = Isomap(xy, 1, 5)
xyo = xy[order(score$dim1),]
spx = smooth.spline(xyo[,1])
spy = smooth.spline(xyo[,2])
cbind(spx$y, spy$y)
}
isp = iso_spline(xy)
plot(isp, type = "l",
xlab = "x", ylab = "y",
main = "IsoSpline")
K = 4
sc = specc(xy, centers=K)
data.frame(x=xy[,1],y=xy[,2],s=as.factor(sc)) %>%
ggplot(aes(x,y,color=s)) +
geom_point() +
ggtitle("Spectral Clustering")
res = c()
for(i in 1:K){
pc = iso_spline(xy[sc==i,])
res = rbind(res, pc$s)
}
K = 4
sc = specc(xy, centers=K)
data.frame(x=xy[,1],y=xy[,2],s=as.factor(sc)) %>%
ggplot(aes(x,y,color=s)) +
geom_point() +
ggtitle("Spectral Clustering")
res = c()
for(i in 1:K){
ic = iso_spline(xy[sc==i,])
res = rbind(res, ic)
}
plot(res)
K = 7
sc = specc(xy, centers=K)
data.frame(x=xy[,1],y=xy[,2],s=as.factor(sc)) %>%
ggplot(aes(x,y,color=s)) +
geom_point() +
ggtitle("Spectral Clustering")
res = c()
for(i in 1:K){
ic = iso_spline(xy[sc==i,])
res = rbind(res, ic)
}
plot(res)
K = 3
sc = specc(xy, centers=K)
data.frame(x=xy[,1],y=xy[,2],s=as.factor(sc)) %>%
ggplot(aes(x,y,color=s)) +
geom_point() +
ggtitle("Spectral Clustering")
res = c()
for(i in 1:K){
ic = iso_spline(xy[sc==i,])
res = rbind(res, ic)
}
plot(res)
K = 5
sc = specc(xy, centers=K)
data.frame(x=xy[,1],y=xy[,2],s=as.factor(sc)) %>%
ggplot(aes(x,y,color=s)) +
geom_point() +
ggtitle("Spectral Clustering")
res = c()
for(i in 1:K){
ic = iso_spline(xy[sc==i,])
res = rbind(res, ic)
}
plot(res)
img = readImage("break.jpg")
image(img[,,1], useRaster = TRUE, col = grey(seq(0, 1, length = 256)), main="Original Picture")
points = trans.picture(1-img[,,1])
xy = points$xys[order(points$Q,decreasing=TRUE),][1:2500,]
data.frame(x=xy[,1], y=xy[,2]) %>% ggplot(aes(x,y)) +
geom_point() + xlim(c(0,1)) + ylim(c(0,1))
img = readImage("break.jpg")
image(img[,,1], useRaster = TRUE, col = grey(seq(0, 1, length = 256)), main="Original Picture")
points = trans.picture(1-img[,,1])
xy = points$xys[order(points$Q,decreasing=TRUE),][1:2000,]
data.frame(x=xy[,1], y=xy[,2]) %>% ggplot(aes(x,y)) +
geom_point() + xlim(c(0,1)) + ylim(c(0,1))
img = readImage("break.jpg")
image(img[,,1], useRaster = TRUE, col = grey(seq(0, 1, length = 256)), main="Original Picture")
points = trans.picture(1-img[,,1])
xy = points$xys[order(points$Q,decreasing=TRUE),][1:2100,]
data.frame(x=xy[,1], y=xy[,2]) %>% ggplot(aes(x,y)) +
geom_point() + xlim(c(0,1)) + ylim(c(0,1))
img = readImage("break.jpg")
image(img[,,1], useRaster = TRUE, col = grey(seq(0, 1, length = 256)), main="Original Picture")
points = trans.picture(1-img[,,1])
xy = points$xys[order(points$Q,decreasing=TRUE),][1:2100,]
data.frame(x=xy[,1], y=xy[,2]) %>% ggplot(aes(x,y)) +
geom_point() + xlim(c(0,1)) + ylim(c(0,1))
score = Isomap(xy, 1, 5)
hist(score$dim1)
data.frame(x=xy[,1],y=xy[,2],s=c(score$dim1)) %>%
ggplot(aes(x,y,color=s)) +
geom_point() +
scale_color_gradientn(colours = rainbow(5)) +
ggtitle("Isomap")
xyo = xy[order(score$dim1),]
spx = smooth.spline(xyo[,1])
spy = smooth.spline(xyo[,2])
plot(spx$y, spy$y, type = "l",
xlab = "x", ylab = "y",
main = "IsoSpline")
res2 = principal_curve(xyo, start = cbind(spx$y, spy$y))
plot(res2)
img = readImage("break.jpg")
image(img[,,1], useRaster = TRUE, col = grey(seq(0, 1, length = 256)), main="Original Picture")
points = trans.picture(1-img[,,1])
xy = points$xys[order(points$Q,decreasing=TRUE),][1:2100,]
data.frame(x=xy[,1], y=xy[,2]) %>% ggplot(aes(x,y)) +
geom_point() + xlim(c(0,1)) + ylim(c(0,1))
K = 5
sc = specc(xy, centers=K)
data.frame(x=xy[,1],y=xy[,2],s=as.factor(sc)) %>%
ggplot(aes(x,y,color=s)) +
geom_point() +
ggtitle("Spectral Clustering")
K = 4
sc = specc(xy, centers=K)
data.frame(x=xy[,1],y=xy[,2],s=as.factor(sc)) %>%
ggplot(aes(x,y,color=s)) +
geom_point() +
ggtitle("Spectral Clustering")
res = c()
for(i in 1:K){
ic = iso_spline(xy[sc==i,])
res = rbind(res, ic)
}
plot(res)
img = readImage("break.jpg")
image(img[,,1], useRaster = TRUE, col = grey(seq(0, 1, length = 256)), main="Original Picture")
points = trans.picture(1-img[,,1])
xy = points$xys[order(points$Q,decreasing=TRUE),][1:2100,]
data.frame(x=xy[,1], y=xy[,2]) %>% ggplot(aes(x,y)) +
geom_point() + xlim(c(0,1)) + ylim(c(0,1))
K = 4
sc = specc(xy, centers=K)
data.frame(x=xy[,1],y=xy[,2],s=as.factor(sc)) %>%
ggplot(aes(x,y,color=s)) +
geom_point() +
ggtitle("Spectral Clustering")
res = c()
for(i in 1:K){
ic = iso_spline(xy[sc==i,])
res = rbind(res, ic)
}
plot(res)
img = readImage("break.jpg")
image(img[,,1], useRaster = TRUE, col = grey(seq(0, 1, length = 256)), main="Original Picture")
points = trans.picture(1-img[,,1])
xy = points$xys[order(points$Q,decreasing=TRUE),][1:2100,]
data.frame(x=xy[,1], y=xy[,2]) %>% ggplot(aes(x,y)) +
geom_point() + xlim(c(0,1)) + ylim(c(0,1))
K = 4
sc = specc(xy, centers=K)
data.frame(x=xy[,1],y=xy[,2],s=as.factor(sc)) %>%
ggplot(aes(x,y,color=s)) +
geom_point() +
ggtitle("Spectral Clustering")
res = c()
for(i in 1:K){
ic = iso_spline(xy[sc==i,])
res = rbind(res, ic)
}
plot(res)
